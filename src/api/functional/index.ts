/**
 * @packageDocumentation
 * @module api.functional
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';
import type { Primitive } from 'typia';

export * as hello_value from './hello_value/index';
export * as int from './int/index';
export * as paged from './paged/index';
export * as article from './article/index';
export * as mock_users from './mock_users/index';
export * as user from './user/index';

/**
 * @controller AppController.getHello
 * @path GET /
 * @accessor api.functional.getHello
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getHello(
  connection: IConnection,
): Promise<getHello.Output> {
  return PlainFetcher.fetch(connection, {
    ...getHello.METADATA,
    template: getHello.METADATA.path,
    path: getHello.path(),
  });
}
export namespace getHello {
  export type Output = Primitive<string>;

  export const METADATA = {
    method: 'GET',
    path: '/',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => '/';
}
