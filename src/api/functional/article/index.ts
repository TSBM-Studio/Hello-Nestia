/**
 * @packageDocumentation
 * @module api.functional.article
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';
import type { Primitive } from 'typia';

import type { IArticle } from '../../../dto/IArticle';

/**
 * @controller AppController.articlePost
 * @path POST /article
 * @accessor api.functional.article.articlePost
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function articlePost(
  connection: IConnection,
  body: articlePost.Body,
): Promise<articlePost.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        'Content-Type': 'application/json',
      },
    },
    {
      ...articlePost.METADATA,
      template: articlePost.METADATA.path,
      path: articlePost.path(),
    },
    body,
  );
}
export namespace articlePost {
  export type Body = Primitive<IArticle>;
  export type Output = Primitive<string>;

  export const METADATA = {
    method: 'POST',
    path: '/article',
    request: {
      type: 'application/json',
      encrypted: false,
    },
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => '/article';
}
